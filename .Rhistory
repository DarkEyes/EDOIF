simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
build_vignettes()
build_vignettes()
library(EDOIF)
# parameter setting
bootT=1000
alpha=0.05
nInv<-1200
start_time <- Sys.time()
#======= input
simData3<-SimNonNormalDist(nInv=nInv,noisePer=0.01)
Values=simData3$Values
Group=simData3$Group
#=============
A3<-EDOIF(Values,Group, bootT=bootT, alpha=alpha, methodType ="perc")
A3
plot(A3)
end_time <- Sys.time()
end_time - start_time
library(ggplot2)
nInv<-1000
simData3<-SimNonNormalDist(nInv=nInv,noisePer=0.01)
#plot(density(simData3$V3))
dat <- data.frame(dens = c(simData3$V3, simData3$V5)
, lines = rep(c("B", "A"), each = nInv))
#Plot.
p1<-ggplot(dat, aes(x = dens, fill = lines)) + geom_density(alpha = 0.5) +xlim(-400, 400)+ ylim(0, 0.07) + ylab("Density [0,1]") +xlab("Values") + theme( axis.text.x = element_text(face="bold",
size=12) )
theme_update(text = element_text(face="bold", size=12)  )
p1$labels$fill<-"Categories"
plot(p1)
build_vignettes()
options(Encoding="UTF-8")
check()
library(devtools)
check()
devtools::release()
check_rhub()
build()
build()
check_rhub()
devtools::release()
spell_check()
devtools::spell_check()
devtools::spell_check()
devtools::spell_check()
spell_check()
devtools::release()
check_win_devel()
devtools::release()
spell_check()
install.packages("spelling")
spell_check()
spell_check()
document()
spell_check()
document()
spell_check()
document()
spell_check()
document()
spell_check()
document()
spell_check()
devtools::release()
devtools::release()
devtools::release()
document()
devtools::release()
install.packages("pdflatex")
devtools
devtools::release_checks()
devtools::release()
devtools::build_manual()
check()
devtools::check()
devtools::check()
document()
devtools::document()
devtools::build_manual()
devtools::check()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
library(EDOIF)
library(boot)
library(EDOIF)
# Simulation section
nInv<-100
initMean=10
stepMean=20
std=8
simData1<-c()
simData1$Values<-rnorm(nInv,mean=initMean,sd=std)
simData1$Group<-rep(c("C1"),times=nInv)
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C2"),times=nInv))
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+2*stepMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C3"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+3*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C4"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+4*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.05 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group)
plot(A1,options =1)
plot(A1,options =3)
remotes::install_github("DarkEyes/EDOIF")
remotes::install_github("DarkEyes/EDOIF")
# Simulation section
nInv<-100
initMean=10
stepMean=20
std=8
simData1<-c()
simData1$Values<-rnorm(nInv,mean=initMean,sd=std)
simData1$Group<-rep(c("C1"),times=nInv)
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C2"),times=nInv))
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+2*stepMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C3"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+3*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C4"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+4*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
library(devtools)
document()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build()
document()
build_manual()
devtools::build()
install.packages("dtree")
library(dtree)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
vignette("Using dabestr", package = "dabestr")
library(dabestr)
vignette("Using dabestr", package = "dabestr")
vignette("EDOIF_demo", package = "EDOIF")
vignette("EDOIF demo", package = "EDOIF")
library(EDOIF)
vignette("EDOIF demo", package = "EDOIF")
vignette(EDOIF, package = "EDOIF")
vignette(all = FALSE)
vignette(all = FALSE,package = "dabestr")
vignette(all = FALSE,package = "EDOIF")
library(EDOIF)
vignette(all = FALSE,package = "EDOIF")
vignette(all = TRUE,package = "EDOIF")
devtools::build_vignettes()
vignette(all = TRUE,package = "EDOIF")
vignette(all = TRUE,package = "EDOIF")
library(EDOIF)
vignette(all = TRUE,package = "EDOIF")
library(EDOIF)
vignette(all = TRUE,package = "EDOIF")
library(EDOIF)
vignette(all = TRUE,package = "EDOIF")
vignette <- readRDS("~/GitHub/EDOIF/Meta/vignette.rds")
vignette
vignette(all = TRUE,package = "EDOIF")
vignette(all = TRUE,package = "EDOIF")
EDOIF::plotMeanCIs()
devtools::document()
library(EDOIF)
library(EDOIF)
vignette(all = TRUE,package = "EDOIF")
?EDOIF
vignette("EDOIF demo", package = "EDOIF")
devtools::install(build_vignettes = TRUE)
vignette("EDOIF demo", package = "EDOIF")
library(EDOIF)
vignette("EDOIF demo", package = "EDOIF")
vignette("EDOIF demo", package = "EDOIF")
devtools::install(build_vignettes = TRUE)
devtools::install()
vignette("EDOIF demo", package = "EDOIF")
vignette("EDOIF demo")
devtools::install(vignette= TRUE)
devtools::install()
vignette("EDOIF demo")
vignette("EDOIF Demo")
devtools::build_vignettes()
vignette("EDOIF Demo")
devtools::install()
vignette("EDOIF Demo")
vignette("EDOIF demo")
devtools::use_vignette("my-vignette")
install.packages("rmarkdown")
devtools::build_vignettes()
vignette("EDOIF Demo")
devtools::install()
vignette("EDOIF Demo")
vignette("EDOIF Demo")
devtools::install(build_vignettes = TRUE)
vignette("EDOIF Demo")
vignette(all=TRUE)
vignette(all=TRUE, package ="EDOIF")
vignette("EDOIF_demo")
vignette(all=TRUE)
library(EDOIF)
vignette(all=TRUE, package = "EDOIF")
vignette(all=TRUE)
devtools::install(build_vignettes = TRUE)
vignette(all=TRUE, package = "EDOIF")
vignette("EDOIF_demo", package = "EDOIF")
# Simulation section
nInv<-100
initMean=10
stepMean=20
std=8
simData1<-c()
simData1$Values<-rnorm(nInv,mean=initMean,sd=std)
simData1$Group<-rep(c("C1"),times=nInv)
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C2"),times=nInv))
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+2*stepMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C3"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+3*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C4"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+4*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.05 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group)
print(A1) # print results in text
devtools::install(build_vignettes = TRUE)
vignette("EDOIF_demo", package = "EDOIF")
?EDOIF
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.05 # significance  significance level
#======= input
Values=simData1$Values
# Simulation section
nInv<-100
initMean=10
stepMean=20
std=8
simData1<-c()
simData1$Values<-rnorm(nInv,mean=initMean,sd=std)
simData1$Group<-rep(c("C1"),times=nInv)
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C2"),times=nInv))
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+2*stepMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C3"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+3*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C4"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+4*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.05 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group,bootT = bootT, alpha=alpha )
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.04 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group,bootT = bootT, alpha=alpha )
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.04 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group,bootT = bootT, alpha=alpha )
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.01 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group,bootT = bootT, alpha=alpha )
print(A1) # print results in text
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.05 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group,bootT = bootT, alpha=alpha )
print(A1) # print results in text
document()
devtools::document()
?EDOIF
# Generate simulation data
nInv<-100
initMean=10
stepMean=20
std=8
simData1<-c()
simData1$Values<-rnorm(nInv,mean=initMean,sd=std)
simData1$Group<-rep(c("C1"),times=nInv)
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C2"),times=nInv))
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+2*stepMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C3"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+3*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C4"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+4*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
# Performing ordering infernce from simData1
resultObj<-EDOIF(simData1$Values,simData1$Group)
# Print results in text mode
print(resultObj)
# Plot results in graphic mode
plot(resultObj)
# Generate simulation data
nInv<-100
initMean=10
stepMean=20
std=8
simData1<-c()
simData1$Values<-rnorm(nInv,mean=initMean,sd=std)
simData1$Group<-rep(c("C1"),times=nInv)
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C2"),times=nInv))
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+2*stepMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C3"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+3*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C4"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+4*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
# Performing ordering infernce from simData1
resultObj<-EDOIF(simData1$Values,simData1$Group)
# Print results in text mode
print(resultObj)
# Plot results in graphic mode
plot(resultObj)
devtools::document()
devtools::document()
devtools::install(build_vignettes = TRUE)
vignette("EDOIF_demo", package = "EDOIF")
?EDOIF
?EDOIF
?EDOIF
?EDOIF
library(EDOIF)
?EDOIF
devtools::document()
?EDOIF
vignette("EDOIF_demo", package = "EDOIF")
?EDOIF
dabestr::dabest()
dabestr::plot()
?dabestr::plot.dabest
dabestr::plot.dabest
EDOIF::plot.EDOIF()
library(EDOIF)
# parameter setting
bootT=1000
alpha=0.05
nInv<-1200
start_time <- Sys.time()
#======= input
simData3<-SimNonNormalDist(nInv=nInv,noisePer=0.01)
Values=simData3$Values
Group=simData3$Group
#=============
A3<-EDOIF(Values,Group, bootT=bootT, alpha=alpha, methodType ="perc")
A3
plot(A3)
end_time <- Sys.time()
end_time - start_time
simData3<-SimNonNormalDist(nInv=nInv)
A3<-EDOIF(simData3$Values,simData3$Group)
A3
simData3<-SimNonNormalDist(nInv=nInv)
nInv
simData3<-SimNonNormalDist(nInv=100)
length(simData3$Group)
devtools::document()
?EDOIF
?EDOIF::plot.EDOIF
# Generate simulation data with 100 samples per categories
simData<-SimNonNormalDist(nInv=100)
# Performing ordering infernce from simData
resultObj<-EDOIF(simData$Values,simData$Group)
# Plot results in graphic mode
plot(resultObj)
?EDOIF::print.EDOIF
?EDOIF::print.EDOIF
# Generate simulation data with 100 samples per categories
simData<-SimNonNormalDist(nInv=100)
# Performing ordering infernce from simData
resultObj<-EDOIF(simData$Values,simData$Group)
# Print results in text mode
print(resultObj)
devtools::document()
?EDOIF::print.EDOIF
# Generate simulation data with 100 samples per categories
simData<-SimNonNormalDist(nInv=100)
# Performing ordering infernce from simData
resultObj<-EDOIF(simData$Values,simData$Group)
# Print results in text mode
print(resultObj)
library(EDOIF)
# parameter setting
bootT=1000
alpha=0.05
nInv<-1200
start_time <- Sys.time()
#======= input
simData3<-SimNonNormalDist(nInv=nInv,noisePer=0.01)
Values=simData3$Values
Group=simData3$Group
#=============
A3<-EDOIF(Values,Group, bootT=bootT, alpha=alpha, methodType ="perc")
A3
plot(A3)
end_time <- Sys.time()
end_time - start_time
# Simulation section
nInv<-100
initMean=10
stepMean=20
std=8
simData1<-c()
simData1$Values<-rnorm(nInv,mean=initMean,sd=std)
simData1$Group<-rep(c("C1"),times=nInv)
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C2"),times=nInv))
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+2*stepMean,sd=std) )
simData1$Group<-c(simData1$Group,rep(c("C3"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+3*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C4"),times=nInv) )
simData1$Values<-c(simData1$Values,rnorm(nInv,mean=initMean+4*stepMean,sd=std) )
simData1$Group<-c(simData1$Group, rep(c("C5"),times=nInv) )
# Simple ordering inference section
library(EDOIF)
# parameter setting
bootT=1000 # Number of times of sampling with replacement
alpha=0.05 # significance  significance level
#======= input
Values=simData1$Values
Group=simData1$Group
#=============
A1<-EDOIF(Values,Group,bootT = bootT, alpha=alpha )
print(A1) # print results in text
devtools::build_manual()
library(devtools)
library(devtools)
ddocument()
document()
install.packages("distr")
R.version.string
install.packages("simpleboot")
document()
citation("EDOIF")
document()
citation("EDOIF")
R.version
document()
document()
document()
document()
library("data.table")
install.packages("roxygen2")
install.packages("devtools")
devtools::document()
devtools::document()
install.packages("markdown")
devtools::document()
devtools::document()
devtools::document()
